<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.dwine.purchase.model.dao.PurchaseMapper">
	
	<resultMap id="productResultMap" type="com.project.dwine.purchase.model.vo.Product">
		<id property="product_no" column="PRODUCT_NO"/>
		<result property="product_kname" column="PRODUCT_KNAME"/>
		<result property="product_ename" column="PRODUCT_ENAME"/>
		<result property="sale_price" column="SALE_PRICE"/>
		<result property="product_count" column="PRODUCT_COUNT"/>
		<result property="winery" column="WINERY"/>
		<result property="thumbnail" column="THUMBNAIL"/>
		<result property="capacity" column="CAPACITY"/>
		<result property="abv" column="ABV"/>
		<result property="taste_graph" column="TASTE_GRAPH"/>
		<result property="information" column="INFORMATION"/>
		<result property="award" column="AWARD"/>
		<result property="tip" column="TIP"/>
		<result property="label_image" column="LABEL_IMAGE"/>
		<result property="status" column="STATUS"/>
		<result property="create_date" column="CREATE_DATE"/>
		<result property="modify_date" column="MODIFY_DATE"/>
		<result property="variety_no" column="VARIETY_NO"/>
		<result property="type_no" column="TYPE_NO"/>
		<result property="country_no" column="COUNTRY_NO"/>
	</resultMap>
	
	<resultMap id="productDetailResultMap" type="com.project.dwine.purchase.model.vo.Product">
		<id property="product_no" column="PRODUCT_NO"/>
		<result property="product_kname" column="PRODUCT_KNAME"/>
		<result property="product_ename" column="PRODUCT_ENAME"/>
		<result property="sale_price" column="SALE_PRICE"/>
		<result property="product_count" column="PRODUCT_COUNT"/>
		<result property="winery" column="WINERY"/>
		<result property="thumbnail" column="THUMBNAIL"/>
		<result property="capacity" column="CAPACITY"/>
		<result property="abv" column="ABV"/>
		<result property="taste_graph" column="TASTE_GRAPH"/>
		<result property="information" column="INFORMATION"/>
		<result property="award" column="AWARD"/>
		<result property="tip" column="TIP"/>
		<result property="label_image" column="LABEL_IMAGE"/>
		<result property="status" column="STATUS"/>
		<result property="create_date" column="CREATE_DATE"/>
		<result property="modify_date" column="MODIFY_DATE"/>
		<result property="variety_no" column="VARIETY_NO"/>
		<result property="type_no" column="TYPE_NO"/>
		<result property="country_no" column="COUNTRY_NO"/>
		<result property="country_name" column="COUNTRY_NAME"/>
		<result property="type_name" column="TYPE_NAME"/>
		<result property="variety_name" column="VARIETY_NAME"/>
		<collection property="hash_names" resultMap="hashAllNames"/>
	</resultMap>
	
	<resultMap id="productDetailResult" type="com.project.dwine.purchase.model.vo.Product">
		<id property="product_no" column="PRODUCT_NO"/>
		<result property="product_kname" column="PRODUCT_KNAME"/>
		<result property="product_ename" column="PRODUCT_ENAME"/>
		<result property="sale_price" column="SALE_PRICE"/>
		<result property="product_count" column="PRODUCT_COUNT"/>
		<result property="winery" column="WINERY"/>
		<result property="thumbnail" column="THUMBNAIL"/>
		<result property="capacity" column="CAPACITY"/>
		<result property="abv" column="ABV"/>
		<result property="taste_graph" column="TASTE_GRAPH"/>
		<result property="information" column="INFORMATION"/>
		<result property="award" column="AWARD"/>
		<result property="tip" column="TIP"/>
		<result property="label_image" column="LABEL_IMAGE"/>
		<result property="status" column="STATUS"/>
		<result property="create_date" column="CREATE_DATE"/>
		<result property="modify_date" column="MODIFY_DATE"/>
		<result property="variety_no" column="VARIETY_NO"/>
		<result property="type_no" column="TYPE_NO"/>
		<result property="country_no" column="COUNTRY_NO"/>
		<result property="country_name" column="COUNTRY_NAME"/>
		<result property="type_name" column="TYPE_NAME"/>
		<result property="variety_name" column="VARIETY_NAME"/>
		<association property="orderDetail" resultMap="OD"/>
	</resultMap>
	
	
	<resultMap type="com.project.dwine.purchase.model.vo.Hashtag" id="hashAllNames">
		<id property="hash_no" column="HASH_NO"/>
		<result property="hash_type" column="HASH_TYPE"/>
		<result property="hash_name" column="HASH_NAME"/>
	</resultMap>
	
	<resultMap type="com.project.dwine.purchase.model.vo.Review" id="reviews">
		<id property="review_no" column="REVIEW_NO"/>
		<result property="review_text" column="REVIEW_TEXT"/>
		<result property="review_image" column="REVIEW_IMAGE"/>
		<result property="review_date" column="REVIEW_DATE"/>
		<result property="review_modify" column="REVIEW_MODIFY"/>
		<result property="star" column="STAR"/>
		<result property="status" column="STATUS"/>
		<result property="user_no" column="USER_NO"/>
		<result property="od_no" column="OD_NO"/>
		<result property="nickname" column="USER_NICKNAME"/>
	</resultMap>
	
	<resultMap type="com.project.dwine.purchase.model.vo.OrderDetail" id="OD">
		<id property="od_no" column="OD_NO"/>
		<result property="od_count" column="OD_COUNT"/>
		<result property="od_price" column="OD_PRICE"/>
		<result property="purchase_no" column="PURCHASE_NO"/>
		<result property="product_no" column="PRODUCT_NO"/>
	</resultMap>

	<select id="getTotalListCount" resultType="_int">
		SELECT
			COUNT(*)
		FROM PRODUCT
		WHERE STATUS = 'Y'		
	</select>


	<select id="getTotalReviewCount" resultType="_int">
		SELECT
	    	COUNT(*)
	    FROM REVIEW R
	    JOIN ORDER_DETAIL O ON(R.OD_NO = O.OD_NO)
	    JOIN PRODUCT P ON(O.PRODUCT_NO = P.PRODUCT_NO)
	   WHERE R.STATUS = 'Y'
	     AND P.PRODUCT_NO = #{ id }
	</select>
 
	<select id="hashList" resultMap="hashAllNames">
		SELECT
				B.HASH_NO
			  , B.HASH_TYPE
              , B.HASH_NAME
      	FROM PRODUCT P
           LEFT JOIN PRODUCT_HASHTAG A ON(P.PRODUCT_NO = A.PRODUCT_NO)
           LEFT JOIN HASHTAG B ON(A.HASH_NO = B.HASH_NO)
           WHERE P.PRODUCT_NO = #{ id }
	</select>
	
	
	
	
	
	
	<select id="wineList" resultMap="productResultMap">
		SELECT
			PRODUCT_NO, 
			PRODUCT_KNAME, 
			PRODUCT_ENAME, 
			SALE_PRICE, 
			PRODUCT_COUNT, 
			WINERY, 
			THUMBNAIL, 
			CAPACITY, 
			ABV, 
			TASTE_GRAPH, 
			INFORMATION, 
			AWARD, 
			TIP, 
			LABEL_IMAGE, 
			STATUS, 
			CREATE_DATE, 
			MODIFY_DATE, 
			VARIETY_NO, 
			TYPE_NO, 
			COUNTRY_NO
      FROM (SELECT 
               ROWNUM RNUM
              , PLIST.*
       FROM(SELECT
               *
               FROM PRODUCT
              WHERE STATUS = 'Y'		
			<if test="sortStandard!=null and !sortStandard.equals('')">
				<if test="sortStandard.equals('hprice')">
					ORDER BY SALE_PRICE DESC
				</if>
				<if test="sortStandard.equals('lprice')">
					ORDER BY SALE_PRICE
				</if>
				<if test="sortStandard.equals('latest')">
					ORDER BY CREATE_DATE
				</if>
			</if> ) PLIST)
	WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<select id="popularwineList"  resultType="com.project.dwine.purchase.model.vo.Product">
		SELECT
	        PRODUCT_NO
	      , PRODUCT_KNAME
	      , PRODUCT_ENAME
	      , SALE_PRICE
	      , PRODUCT_COUNT
	      , WINERY
	      , THUMBNAIL
	      , CAPACITY
	      , ABV
	      , TASTE_GRAPH
	      , INFORMATION
	      , AWARD
	      , TIP
	      , LABEL_IMAGE
	      , STATUS
	      , CREATE_DATE
	      , MODIFY_DATE
	      , VARIETY_NO
	      , TYPE_NO
	      , COUNTRY_NO
	      , ORDER_COUNT
     FROM (SELECT 
            ROWNUM RNUM
           , PLIST.*
     FROM(SELECT
            DISTINCT(PRODUCT_NO)
	      , PRODUCT_KNAME
	      , PRODUCT_ENAME
	      , SALE_PRICE
	      , PRODUCT_COUNT
	      , WINERY
	      , THUMBNAIL
	      , CAPACITY
	      , ABV
	      , TASTE_GRAPH
	      , INFORMATION
	      , AWARD
	      , TIP
	      , LABEL_IMAGE
	      , STATUS
	      , CREATE_DATE
	      , MODIFY_DATE
	      , VARIETY_NO
	      , TYPE_NO
	      , COUNTRY_NO
	      , NVL(SUM(OD_COUNT) OVER(PARTITION BY PRODUCT_NO),0) AS ORDER_COUNT
	      FROM PRODUCT
	      LEFT JOIN ORDER_DETAIL USING (PRODUCT_NO)
	      WHERE STATUS = 'Y'
	      ORDER BY ORDER_COUNT DESC) PLIST)
      WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<select id="allReviewList" resultMap="reviews">
	SELECT
			    G.REVIEW_NO
		      , G.REVIEW_TEXT
		      , G.REVIEW_IMAGE
		      , G.REVIEW_DATE
		      , G.REVIEW_MODIFY
		      , G.STAR
		      , G.STATUS
		      , G.USER_NO
		      , G.OD_NO
		      , H.USER_NICKNAME
		    FROM PRODUCT P
		    JOIN ORDER_DETAIL O ON(P.PRODUCT_NO = O.PRODUCT_NO)
		    JOIN REVIEW G ON(O.OD_NO = G.OD_NO)
		    JOIN MEMBER H ON(G.USER_NO = H.USER_NO)
		    WHERE P.PRODUCT_NO = #{ id }
		     AND G.STATUS = 'Y'
		    ORDER BY REVIEW_MODIFY DESC
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<select id="wineDetail" resultMap="productDetailResultMap">
		 	 	 SELECT
			    P.PRODUCT_NO
			  , P.PRODUCT_KNAME
			  , P.PRODUCT_ENAME
			  , P.SALE_PRICE
			  , P.PRODUCT_COUNT
			  , P.WINERY
			  , P.THUMBNAIL
			  , P.CAPACITY
			  , P.ABV
			  , P.TASTE_GRAPH
			  , P.INFORMATION
			  , P.AWARD
			  , P.TIP
			  , P.LABEL_IMAGE
			  , P.STATUS
			  , P.CREATE_DATE
			  , P.MODIFY_DATE
			  , P.VARIETY_NO
			  , P.TYPE_NO
			  , P.COUNTRY_NO
              , C.COUNTRY_NAME
              , D.TYPE_NAME
              , E.VARIETY_NAME
              , B.HASH_NO
              , B.HASH_TYPE
              , B.HASH_NAME
		   FROM PRODUCT P
           LEFT JOIN PRODUCT_HASHTAG A ON(P.PRODUCT_NO = A.PRODUCT_NO)
           LEFT JOIN HASHTAG B ON(A.HASH_NO = B.HASH_NO)
           LEFT JOIN COUNTRY C ON (P.COUNTRY_NO = C.COUNTRY_NO)
           LEFT JOIN TYPE D ON(P.TYPE_NO = D.TYPE_NO)
           LEFT JOIN VARIETY E ON(P.VARIETY_NO = E.VARIETY_NO)
           LEFT JOIN ORDER_DETAIL F ON(P.PRODUCT_NO = F.PRODUCT_NO)
           LEFT JOIN REVIEW G ON(F.OD_NO = G.OD_NO)
           LEFT JOIN MEMBER H ON(G.USER_NO = H.USER_NO)
          WHERE P.PRODUCT_NO = #{ id }
            AND P.STATUS = 'Y'
	</select>
	
	<select id="reviewList" resultMap="reviews">
		SELECT
	        REVIEW_NO
	      , REVIEW_TEXT
	      , REVIEW_IMAGE
	      , REVIEW_DATE
	      , REVIEW_MODIFY
	      , STAR
	      , STATUS
	      , USER_NO
	      , OD_NO
	      , USER_NICKNAME
     FROM (SELECT
              ROWNUM RNUM
             , PLIST.* 
	 FROM (SELECT
			    G.REVIEW_NO
		      , G.REVIEW_TEXT
		      , G.REVIEW_IMAGE
		      , G.REVIEW_DATE
		      , G.REVIEW_MODIFY
		      , G.STAR
		      , G.STATUS
		      , G.USER_NO
		      , G.OD_NO
		      , H.USER_NICKNAME
		    FROM PRODUCT P
		    JOIN ORDER_DETAIL O ON(P.PRODUCT_NO = O.PRODUCT_NO)
		    JOIN REVIEW G ON(O.OD_NO = G.OD_NO)
		    JOIN MEMBER H ON(G.USER_NO = H.USER_NO)
		    WHERE P.PRODUCT_NO = #{ id }
		     AND G.STATUS = 'Y'
		    ORDER BY REVIEW_MODIFY DESC) PLIST)
	      WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	
	
	
<!-- 
	<select id="filterWineList" parameterType="String" resultMap="productResultMap">
		SELECT
				P.PRODUCT_NO
			  , P.PRODUCT_KNAME
			  , P.PRODUCT_ENAME
			  , P.SALE_PRICE
			  , P.PRODUCT_COUNT
			  , P.WINERY
			  , P.THUMBNAIL
			  , P.CAPACITY
			  , P.ABV
			  , P.TASTE_GRAPH
			  , P.INFORMATION
			  , P.AWARD
			  , P.TIP
			  , P.LABEL_IMAGE
			  , P.STATUS
			  , P.CREATE_DATE
			  , P.MODIFY_DATE
			  , P.VARIETY_NO
			  , P.TYPE_NO
			  , P.COUNTRY_NO
		   FROM PRODUCT P
           LEFT JOIN COUNTRY C ON (P.COUNTRY_NO = C.COUNTRY_NO)
           LEFT JOIN TYPE D ON(P.TYPE_NO = D.TYPE_NO)
           LEFT JOIN VARIETY E ON(P.VARIETY_NO = E.VARIETY_NO)
           WHERE 1=1
           AND P.STATUS = 'Y'
			<if test="country!=null and !country.equals('')">
					AND COUNTRY_NAME = #{ country }		
			</if>
			<if test="type!=null and !type.equals('')">
					AND TYPE_NAME = #{ type }		
			</if>
			<if test="name!=null and !name.equals('')">
					AND (UPPER(REPLACE(PRODUCT_KNAME,' ','')) LIKE REPLACE(UPPER('%' ||  #{name} || '%'),' ','') OR UPPER(REPLACE(PRODUCT_ENAME,' ','')) LIKE REPLACE(UPPER('%' ||  #{name} || '%'),' ',''))
			</if>
			<if test="variety!=null and !variety.equals('')">
					AND VARIETY_NAME = #{ variety }
			</if>
			<if test="price!=null and !price.equals('')">
				<if test="price.equals('10000')">
					AND SALE_PRICE &lt;= 10000
				</if>
				<if test="price.equals('30000')">
					AND SALE_PRICE BETWEEN 10000 AND 30000
				</if>
				<if test="price.equals('50000')">
					AND SALE_PRICE BETWEEN 30000 AND 50000
				</if>
				<if test="price.equals('100000')">
					AND SALE_PRICE BETWEEN 50000 AND 100000
				</if>
				<if test="price.equals('200000')">
					AND SALE_PRICE BETWEEN 100000 AND 200000
				</if>
				<if test="price.equals('300000')">
					AND SALE_PRICE BETWEEN 200000 AND 300000
				</if>
			</if>
	</select>
	
	<select id="sortWineList" parameterType="String" resultMap="productResultMap">
		SELECT
			    PRODUCT_NO
			  , PRODUCT_KNAME
			  , PRODUCT_ENAME
			  , SALE_PRICE
			  , PRODUCT_COUNT
			  , WINERY
			  , THUMBNAIL
			  , CAPACITY
			  , ABV
			  , TASTE_GRAPH
			  , INFORMATION
			  , AWARD
			  , TIP
			  , LABEL_IMAGE
			  , STATUS
			  , CREATE_DATE
			  , MODIFY_DATE
			  , VARIETY_NO
			  , TYPE_NO
			  , COUNTRY_NO
		   FROM PRODUCT
           WHERE 1=1         
           AND STATUS = 'Y'   
            <if test="val!=null and !val.equals('')">
				<if test="val.equals('hprice')">
					ORDER BY SALE_PRICE DESC
				</if>
				<if test="val.equals('lprice')">
					ORDER BY SALE_PRICE
				</if>
				<if test="val.equals('latest')">
					ORDER BY CREATE_DATE
				</if>
			</if>
	</select>
	 -->
	 
	 
	 <select id="getsearchListCount" resultType="_int">
	 SELECT
			COUNT(*)
		   FROM PRODUCT P
           LEFT JOIN COUNTRY C ON (P.COUNTRY_NO = C.COUNTRY_NO)
           LEFT JOIN TYPE D ON(P.TYPE_NO = D.TYPE_NO)
           LEFT JOIN VARIETY E ON(P.VARIETY_NO = E.VARIETY_NO)
           WHERE 1=1
           AND P.STATUS = 'Y'
			<if test="country!=null and !country.equals('')">
					AND COUNTRY_NAME = #{ country }		
			</if>
			<if test="type!=null and !type.equals('')">
					AND TYPE_NAME = #{ type }		
			</if>
			<if test="name!=null and !name.equals('')">
					AND (UPPER(REPLACE(PRODUCT_KNAME,' ','')) LIKE REPLACE(UPPER('%' ||  #{name} || '%'),' ','') OR UPPER(REPLACE(PRODUCT_ENAME,' ','')) LIKE REPLACE(UPPER('%' ||  #{name} || '%'),' ',''))
			</if>
			<if test="variety!=null and !variety.equals('')">
					AND VARIETY_NAME = #{ variety }
			</if>
			<if test="price!=null and !price.equals('')">
				<if test="price.equals('10000')">
					AND SALE_PRICE &lt;= 10000
				</if>
				<if test="price.equals('30000')">
					AND SALE_PRICE BETWEEN 10000 AND 30000
				</if>
				<if test="price.equals('50000')">
					AND SALE_PRICE BETWEEN 30000 AND 50000
				</if>
				<if test="price.equals('100000')">
					AND SALE_PRICE BETWEEN 50000 AND 100000
				</if>
				<if test="price.equals('200000')">
					AND SALE_PRICE BETWEEN 100000 AND 200000
				</if>
				<if test="price.equals('300000')">
					AND SALE_PRICE BETWEEN 200000 AND 300000
				</if>
			</if>
	 		<if test="sortStandard!=null and !sortStandard.equals('')">
				<if test="sortStandard.equals('hprice')">
					ORDER BY SALE_PRICE DESC
				</if>
				<if test="sortStandard.equals('lprice')">
					ORDER BY SALE_PRICE
				</if>
				<if test="sortStandard.equals('latest')">
					ORDER BY CREATE_DATE
				</if>
			</if>
	 </select>
	 
	 <select id="selectSearchProductList" resultMap="productResultMap">
		SELECT
		    PRODUCT_NO, 
			PRODUCT_KNAME, 
			PRODUCT_ENAME, 
			SALE_PRICE, 
			PRODUCT_COUNT, 
			WINERY, 
			THUMBNAIL, 
			CAPACITY, 
			ABV, 
			TASTE_GRAPH, 
			INFORMATION, 
			AWARD, 
			TIP, 
			LABEL_IMAGE, 
			STATUS, 
			CREATE_DATE, 
			MODIFY_DATE, 
			VARIETY_NO, 
			TYPE_NO, 
			COUNTRY_NO
      FROM (SELECT
               ROWNUM RNUM
              , PLIST.*
       FROM(SELECT
               P.PRODUCT_NO
			, P.PRODUCT_KNAME
			, P.PRODUCT_ENAME
			, P.SALE_PRICE
			, P.PRODUCT_COUNT
			, P.WINERY
			, P.THUMBNAIL
			, P.CAPACITY
			, P.ABV
			, P.TASTE_GRAPH
			, P.INFORMATION
			, P.AWARD
			, P.TIP
			, P.LABEL_IMAGE
			, P.STATUS
			, P.CREATE_DATE
			, P.MODIFY_DATE
			, P.VARIETY_NO
			, P.TYPE_NO
			, P.COUNTRY_NO
              FROM PRODUCT P
           LEFT JOIN COUNTRY C ON (P.COUNTRY_NO = C.COUNTRY_NO)
           LEFT JOIN TYPE D ON(P.TYPE_NO = D.TYPE_NO)
           LEFT JOIN VARIETY E ON(P.VARIETY_NO = E.VARIETY_NO)
           WHERE 1=1
           AND P.STATUS = 'Y'
			<if test="country!=null and !country.equals('')">
					AND COUNTRY_NAME = #{ country }
			</if>
			<if test="type!=null and !type.equals('')">
					AND TYPE_NAME = #{ type }
			</if>
			<if test="name!=null and !name.equals('')">
					AND (UPPER(REPLACE(PRODUCT_KNAME,' ','')) LIKE REPLACE(UPPER('%' ||  #{name} || '%'),' ','') OR UPPER(REPLACE(PRODUCT_ENAME,' ','')) LIKE REPLACE(UPPER('%' ||  #{name} || '%'),' ',''))
			</if>
			<if test="variety!=null and !variety.equals('')">
					AND VARIETY_NAME = #{ variety }
			</if>
			<if test="price!=null and !price.equals('')">
				<if test="price.equals('10000')">
					AND SALE_PRICE &lt;= 10000
				</if>
				<if test="price.equals('30000')">
					AND SALE_PRICE BETWEEN 10000 AND 30000
				</if>
				<if test="price.equals('50000')">
					AND SALE_PRICE BETWEEN 30000 AND 50000
				</if>
				<if test="price.equals('100000')">
					AND SALE_PRICE BETWEEN 50000 AND 100000
				</if>
				<if test="price.equals('200000')">
					AND SALE_PRICE BETWEEN 100000 AND 200000
				</if>
				<if test="price.equals('300000')">
					AND SALE_PRICE BETWEEN 200000 AND 300000
				</if>
			</if>
	 		<if test="sortStandard!=null and !sortStandard.equals('')">
				<if test="sortStandard.equals('hprice')">
					ORDER BY SALE_PRICE DESC
				</if>
				<if test="sortStandard.equals('lprice')">
					ORDER BY SALE_PRICE
				</if>
				<if test="sortStandard.equals('latest')">
					ORDER BY CREATE_DATE
				</if>
			</if> ) PLIST)
      WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	<select id="popularList" parameterType="String" resultType="com.project.dwine.purchase.model.vo.Product">
		SELECT
	        DISTINCT(PRODUCT_NO)
	      , NVL(SUM(OD_COUNT) OVER(PARTITION BY PRODUCT_NO),0)
	      , PRODUCT_KNAME
	      , PRODUCT_ENAME
	      , SALE_PRICE
	      , PRODUCT_COUNT
	      , WINERY
	      , THUMBNAIL
	      , CAPACITY
	      , ABV
	      , TASTE_GRAPH
	      , INFORMATION
	      , AWARD
	      , TIP
	      , LABEL_IMAGE
	      , STATUS
	      , CREATE_DATE
	      , MODIFY_DATE
	      , VARIETY_NO
	      , TYPE_NO
	      , COUNTRY_NO
	      FROM PRODUCT
	      LEFT JOIN ORDER_DETAIL USING (PRODUCT_NO)
	      ORDER BY 2 DESC
	</select>
	
	<select id="checkWish" parameterType="_int" resultType="com.project.dwine.wish.model.vo.Wish">
		SELECT
	        WISH_NO
	      , WISH_DATE
	      , USER_NO
	      , PRODUCT_NO
	      FROM WISH
	      JOIN PRODUCT  USING (PRODUCT_NO)
	      WHERE USER_NO = #{user_no}
	        AND PRODUCT_NO = #{product_no}
	</select>
	
	<insert id="purchaseInsert" parameterType="com.project.dwine.purchase.model.vo.Purchase">
	INSERT
			INTO PURCHASE
		(
			PURCHASE_NO
		  , PURCHASE_DATE
		  , USE_POINT
		  , PURCHASE_PRICE
		  , PICKUP_DATE
		  , PICKUP_PLACE
		  , PICKUP_TIME
		  , ORDER_STATUS
		  , STATUS
		  , REFUND_DATE
		  , USER_NO
		)
		VALUES
		(
			#{purchase_no}
		  ,	DEFAULT
		  , #{use_point}
		  , #{purchase_price}
		  , #{pickup_date}
		  , #{pickup_place}
		  , #{pickup_time}
		  , DEFAULT
		  , DEFAULT
		  , NULL
		  , #{user_no}
		)
	</insert>
	
	<update id="pointUpdate" parameterType="com.project.dwine.member.model.vo.Member">
	UPDATE MEMBER
  	   SET USER_POINT = #{user_point}
  	 WHERE USER_NO = #{user_no}
	</update>
	
	<insert id="pointPlus" parameterType="com.project.dwine.purchase.model.vo.Point">
	INSERT
  	  INTO POINT
	  (
	    POINT_NO
	  , CONTENT
	  , POINT
	  , PDATE
	  , STATUS
	  , USER_NO
	  , PURCHASE_NO
	  )
	  VALUES
	  (
	    SEQ_POINT_NO.NEXTVAL
	  , '구매에 대한 적립'
	  , #{point}
	  , SYSDATE
	  , DEFAULT
	  , #{user_no}
	  , #{purchase_no}
	  )
	</insert>
	<insert id="paymentInsert" parameterType="com.project.dwine.purchase.model.vo.Payment">
	INSERT
  	  INTO PAYMENT
	  (
	    PAY_NO
	  , PAY_DATE
	  , PAY_METHOD
	  , PURCHASE_NO
	  )
	  VALUES
	  (
	    #{pay_no}
	  , SYSDATE
	  , #{pay_method}
	  , #{purchase_no}
	  )
	</insert>
	<insert id="orderDetailInsert" parameterType="com.project.dwine.purchase.model.vo.OrderDetail">
	INSERT
  	  INTO ORDER_DETAIL
	  (
	    OD_NO
	  , OD_COUNT
	  , OD_PRICE
	  , PURCHASE_NO
	  , PRODUCT_NO
	  )
	  VALUES
	  (
	    SEQ_ODNO.NEXTVAL
	  , #{od_count}
	  , #{od_price}
	  , #{purchase_no}
	  , #{product_no}
	  )
	</insert>
	<delete id="cartDelete" parameterType="com.project.dwine.cart.model.vo.Cart">
	DELETE FROM CART
	WHERE USER_NO = #{user_no}
	<if test="cart_no!=null">
				AND
				<foreach collection="cart_no" item="cartno" separator="or">
				CART_NO = #{cartno}
				</foreach>
	</if>
	</delete>
	<update id="stockUpdate" parameterType="com.project.dwine.purchase.model.vo.Product">
	UPDATE PRODUCT
	   SET PRODUCT_COUNT =  #{product_count}
	 WHERE PRODUCT_NO =  #{product_no}
	</update>
	<select id="memberinfo"  parameterType="_int"  resultType="com.project.dwine.member.model.vo.Member">
	SELECT
		USER_NO,
		USER_ID,
		USER_PW,
		USER_NAME,
		USER_BIRTH,
		USER_PHONE,
		USER_NICKNAME,
		USER_POINT,
		USER_STATUS
	FROM MEMBER
	WHERE USER_NO =  #{user_no}
	AND USER_STATUS = 'Y'
	</select>
<select id="selectPurchase" parameterType="string"  resultType="com.project.dwine.purchase.model.vo.Purchase">
	SELECT
			PURCHASE_NO
		  , PURCHASE_DATE
		  , USE_POINT
		  , PURCHASE_PRICE
		  , PICKUP_DATE
		  , PICKUP_PLACE
		  , PICKUP_TIME
		  , ORDER_STATUS
		  , STATUS
		  , REFUND_DATE
		  , USER_NO
	FROM PURCHASE
	WHERE PURCHASE_NO = #{purchase_no}
	</select>
	<select id="selectOrderDetail" parameterType="string" resultMap="productDetailResult">
	SELECT
	        PRODUCT_KNAME
	      , PRODUCT_ENAME
	      , SALE_PRICE
	      , THUMBNAIL
	      , OD_COUNT
	      , OD_PRICE
        FROM PRODUCT P
        JOIN ORDER_DETAIL O ON(P.PRODUCT_NO = O.PRODUCT_NO)
        WHERE PURCHASE_NO = #{purchase_no}
	</select>
	<select id="selectPoint"  parameterType="string"  resultType="com.project.dwine.purchase.model.vo.Point">
	SELECT
			POINT_NO
		  , CONTENT
		  , POINT
		  , PDATE
		  , USER_NO
		  , REVIEW_NO
		  , PURCHASE_NO
	FROM POINT
	WHERE PURCHASE_NO = #{purchase_no}
	</select>
	<select id="checkReport" resultType="com.project.dwine.manage.model.vo.Report">
	SELECT
        REPORT_NO
      , USER_NO
      , REASON_NO
      , REVIEW_NO
      , REPORTER_NO
      , REPORT_DATE
    FROM REPORT
    WHERE REPORTER_NO = #{user_no}
    AND REVIEW_NO = #{reviewNo}
	</select>
	<insert id="insertReport"  parameterType="com.project.dwine.manage.model.vo.Report">
	INSERT
	INTO REPORT
	(
	    REPORT_NO
	  , USER_NO
	  , REASON_NO
	  , REVIEW_NO
	  , REPORTER_NO
	  , REPORT_DATE
	)
	VALUES
	(
	    SEQ_RPNO.NEXTVAL
	    , #{userNo}
	    , #{reasonNo}
	    , #{reviewNo}
	    , #{user_no}
	    , SYSDATE
	)
	</insert>
	<insert id="memberReportedCount">
	UPDATE
	MEMBER SET
	REPORTED_COUNT = REPORTED_COUNT + 1
	WHERE USER_NO = #{userNo}
	</insert>
	
</mapper>










