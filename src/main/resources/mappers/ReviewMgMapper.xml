<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.dwine.manage.model.dao.ReviewMgMapper">
	
	<resultMap type="com.project.dwine.member.model.vo.Member"
		id="memberResultMap">
		<id property="user_no" column="user_no" />
		<result property="user_id" column="user_id" />
		<result property="user_pw" column="user_pw" />
		<result property="user_name" column="user_name" />
		<result property="user_birth" column="user_birth" />
		<result property="user_phone" column="user_phone" />
		<result property="user_nickname" column="user_nickname" />
		<result property="user_point" column="user_point" />
		<result property="reported_count" column="reported_count" />
		<association property="authority"
			resultMap="authorityResultMap" />
	</resultMap>
	
	<resultMap type="com.project.dwine.member.model.vo.Authority"
		id="authorityResultMap">
		<id property="code" column="authority_no" />
		<result property="name" column="authority_name" />
	</resultMap>
	
	<resultMap type="com.project.dwine.manage.model.vo.Review"
		id="ReviewResultMap">
		<id property="review_no" column="review_no" />
		<result property="review_text" column="REVIEW_TEXT" />
		<result property="review_image" column="review_image" />
		<result property="review_date" column="review_date" />
		<result property="review_modify" column="review_modify" />
		<result property="star" column="star" />
		<result property="status" column="status" />
		<result property="od_no" column="od_no" />
		<result property="user_no" column="user_no" />
	</resultMap>
	
	<resultMap type="com.project.dwine.manage.model.vo.Review"
		id="ReviewListMap">
		<id property="review_no" column="review_no" />
		<result property="review_text" column="REVIEW_TEXT" />
		<result property="review_date" column="review_date" />
		<result property="user_no" column="user_no" />
	</resultMap>
	
	<resultMap type="com.project.dwine.manage.model.vo.Report"
		id="reviewMgResultMap">
		<id property="report_no" column="report_no" />
		<result property="user_no" column="user_no" />
		<result property="reason_no" column="reason_no" />
		<result property="review_no" column="review_no" />
		<result property="reporter_no" column="reporter_no" />
		<result property="count" column="count" />
		<result property="report_date" column="report_date" />
	</resultMap>
	
	<resultMap type="com.project.dwine.manage.model.vo.ReportReason"
		id="reportReasonResultMap">
		<id property="reason_no" column="reason_no" />
		<result property="reason_context" column="reason_context" />
	</resultMap>
	
	
	<select id="selectReviewList" resultMap="ReviewListMap">
	select
    review_no1,
    user_id2,
    count,
    review_text,
    review_date
from
(select
    ROWNUM num,
    item.*
    from (select 
	        rev.review_no review_no1,
            m.user_id user_id2,
	        (SELECT 
			            COUNT(*)
			            FROM REPORT rep
			            WHERE rep.REVIEW_NO = rev.REVIEW_NO) count,
	    rev.review_text,
	    rev.review_date
    from member m, review rev
    where rev.user_no = m.user_no
    and rev.status = 'Y'
    ORDER BY count DESC, rev.REVIEW_NO)item)
    where num between #{startRow} AND #{endRow}
	
	</select>
	
	<select id="reviewMgTotalListCnt" resultType="_int">
	
	SELECT COUNT(*) FROM REVIEW WHERE STATUS = 'Y'
	
	</select>
	
	
	
	
	
	<select id="selectOneReview" resultMap="ReviewResultMap">
		 SELECT
                R.REVIEW_NO AS REVIEW_NO2
              , RP.REPORT_NO 
              , M2.USER_ID as user_id2
              , REASON_CONTEXT
              , (SELECT 
                  COUNT(*)
                  FROM REPORT
                  WHERE REVIEW_NO = RP.REVIEW_NO)COUNT
              , R.REVIEW_TEXT
              , R.REVIEW_IMAGE
              , R.REVIEW_DATE
              , RP.REPORT_DATE
              , R.REVIEW_NO AS REVIEW_NO1
              , M1.USER_ID AS user_id1
        FROM REVIEW R
        LEFT JOIN REPORT RP ON R.REVIEW_NO = RP.REVIEW_NO
        LEFT JOIN REPORTREASON USING(REASON_NO)
        LEFT JOIN MEMBER M1 ON (REPORTER_NO = M1.USER_NO)
        LEFT JOIN MEMBER M2 ON R.USER_NO = M2.USER_NO
        WHERE R.REVIEW_NO = #{review_no}
        ORDER BY COUNT DESC, R.REVIEW_NO
	</select>
	
	
	
	<update id="deleteReviewMg" parameterType="String">
	
	UPDATE 	REVIEW 
	SET		STATUS = 'N'
    WHERE REVIEW_NO = #{ review_no }
    
	</update>
	
	


</mapper>
	